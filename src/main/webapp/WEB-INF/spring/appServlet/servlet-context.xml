<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- Spring MVC에서 @Controller가 붙은 클래스가 정상적인 역할 즉,
		디스패처 서블릿으로부터 요청을 받는 것과 같은 일을 할수 있게된다. 
		이때 필요한 것이 핸들러매핑, 핸들러 어댑터이고 이 옵션이 있어야 
		이들이 빈으로 등록된다.
		
		또한 @RequestMapping, @PathVariable, @RequestParam과 같은
		어노테이션을 사용할 수 있게 해준다.
		
		이 옵션이 없어도 컨트롤러가 빈으로 등록되기는 하지만 스프링 프레임워크로부터
		자동으로 인식되지 못한다. -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- 웹 자원에 대한 경로 연결 처리 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- @Controller가 반환한 jsp 페이지 이름을 받아서 정확한 jsp의 풀경로를 반환해줌.
		beans 태그로 되어 있는 부분은 명시된 클래스를 빈(객체)로 만들어서 스프링 컨테이너에
		등록해다라는 설정이다. -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 여기에 명시된 패키지에 있는 클래스들을 스캔(검색)하고 그중에서 클래스에 @Controller와
		같은 어노테이션이 적혀 있는 클래스들을 스프링 컨테이너에 빈으로 등록해달라는 설정 -->
	<context:component-scan base-package="com.javalab.board.controller" />

</beans:beans>